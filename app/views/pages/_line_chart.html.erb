<%=link_to "Νέα απεικόνιση στατιστικών στοιχείων", vehicles_path%>
<br>
<div id="graph" style="height: 500px; margin-top: 2em" >

</div>
<script>
var nameList=<%=@name_list%>;
        var statistika=<%=@statistika%>;
        var date=[];
        var katanalwsh=[];

        var series = [];
        var counterArray=[];
        var colours= [];
                
        for(j=0;j<nameList.length;j++){
            colours[j]=setRandomColour();
        }
        for(i=0;i<statistika.length;i++){  

            var flag=statistika[i].length;

            counterArray[i]=statistika[i][0].length;
            //console.log(counterArray[i]+"hi");
            for(j=0;j<flag;j++){            
                
                for(k=0;k<counterArray[i];k++){                    
                    //console.log(nameList[i]);
                    //isNaN returns true if its string
                    if(isNaN(statistika[i][j][k])){
                        date.push(statistika[i][j][k]);
                    }
                    else{
                        katanalwsh.push(statistika[i][j][k]);
                    } 
                }    
            }   
        }

        var title_graph="<%@titlos%>";
        //console.log(katanalwsh);
        console.log(date);
//removeA(katanalwsh, -1);
console.log(katanalwsh);
        var data=[];
        var oxhma="<%="#{@array[1]}"%>";
        var oxhma2="<%="#{@array[5]}"%>",lastPos=0;
        for (i=0;i<nameList.length;i++){ 
            var temp,j;
            var pinakas=[];
            var colourPicker=colours[i]
            if(i==0){
                temp=counterArray[i];
                pinakas=setDataToArray(i,temp,colourPicker);
                data.push({
                        name: nameList[i],
                        pointWidth: 10,
                        data: pinakas,
                        dataLabels: {
                            enabled: false,
                            formatter: function() {
                              var percents = this.point.partialFill;
                              //console.log(percents);
                              return percents ? percents  + '' : ''
                            }
                        },
                        colour: colourPicker
                });
                lastPos=temp;
            }
            else{

                //temp=counterArray[i-1];
                //var last=counterArray[i]+temp;
                pinakas=setDataToArray(lastPos,lastPos+counterArray[i],colourPicker);
                //console.log("LAST "+lastPos+" "+counterArray[i]);
                data.push({
                    name: nameList[i],
                    //pointWidth: 10,
                    data: pinakas,
                    dataLabels: {
                        enabled: false,
                        formatter: function() {
                          var percents = this.point.partialFill;
                          //console.log(percents);
                          return percents ? percents  + '' : ''
                        }
                    },
                    colour: colourPicker
                });
                //console.log(lastPos+counterArray[i]);
                lastPos+=counterArray[i];

            }
        }


//console.log(data);

    var legendTitle,titleForMesh;

    <% if @case ==3 %>
        legendTitle="Οχήματα";
        titleForMesh="Μέση κατανάλωση οχημάτων";

    <%else%>
        legendTitle="Οχήματα";
        titleForMesh="Μέση κατανάλωση οχημάτων";
    <%end%>   
//eisodos kokkinhs grammhs sto grafhma

    var array_date=<%=@array_date%>;
    var second_graph_array=<%=@second_graph_array%>;
    console.log(second_graph_array);
    console.log(array_date);
    //removeA(second_graph_array, -1);
    console.log(second_graph_array);
    var secondPinakas=[];
    if(array_date.length>=second_graph_array.length){
        secondPinakas=setDataToSecondGraph(0,second_graph_array.length,'red');
    
    }
    else{
        secondPinakas=setDataToSecondGraph(0,array_date.length,'red');
    }
    data.push({
                    name: titleForMesh,
                    //pointWidth: 5,
                    data: secondPinakas,
                    dataLabels: {
                        enabled: false,
                        formatter: function() {
                          var percents = this.point.partialFill;
                          console.log(percents);
                          return percents ? percents  + '' : ''
                        }
                    },
                    color: 'red'
    });

Highcharts.chart('graph', {
    chart: {
        type: 'spline',
        zoomType: 'x'
    },
    title: {
        text: title_graph
    },
    xAxis: {
        type:'datetime'
    },
    yAxis: {
        title: {
            text: 'Κατανάλωση (lt/100 km)'
        }
    },
    legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle',
        title: {
            text:legendTitle
        }
    },
    tooltip: {
                    formatter: function() {
                      return '<b>' + this.point.myData + '</b>';
            }},
    /*plotOptions: {
        series: {
            label: {
                connectorAllowed: false
            },
            pointStart: 2010
        }
    },*/

    series: data

});

function setDataToArray(first,last,colourPicker){
    var array=[];
    for(j=first;j<last-1;j++){
        priorDate= new Date(date[j]).getTime()+7000000;
        priorDate= new Date(priorDate);
        postDate= new Date(date[j+1]).getTime()+7000000;
        postDate= new Date(postDate);
                    array.push({
                    //name
                    //name:nameList[i],
                    //date  
                    myData: 'Date: '+ priorDate+' - '+postDate+' = ' +katanalwsh[j+1].toFixed(2),
                    x:new Date(date[j]).getTime()+11000000,
                    //x2:new Date(date[j+1]).getTime()+11000000,
                    //katanalwsh
                    y:katanalwsh[j+1],
                    partialFill:  katanalwsh[j+1].toFixed(2),
                    //color: colourPicker              
                    });
                    
    } 
    return array;
}
function setDataToSecondGraph(first,last,colourPicker){
    var array=[];
    for(j=first;j<last;j++){
        if(second_graph_array[j]!=-1){
            priorDate= new Date(date[j]).getTime()+7000000;
            priorDate= new Date(priorDate);
            postDate= new Date(date[j+1]).getTime()+7000000;
            postDate= new Date(postDate);
                    array.push({
                    //name
                    //name:nameList[i],
                    //date
                    myData: 'Date: '+ priorDate+' - '+postDate+' = ' +second_graph_array[j].toFixed(2),  
                    x:new Date(array_date[j]).getTime()+11000000,
                    //x2:new Date(array_date[j+1]).getTime()+11000000,
                    //katanalwsh
                    y:second_graph_array[j],
                    partialFill:  second_graph_array[j].toFixed(2),
                    //color: colourPicker              
                    });
        }             
    } 
    return array;
}
function setRandomColour() {
          var letters = '0123456789ABCDEF';
          var color = '#';
          for (i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
          }
          console.log(color);
          return color;

}
function removeA(arr) {
    var what, a = arguments, L = a.length, ax;
    while (L > 1 && arr.length) {
        what = a[--L];
        while ((ax= arr.indexOf(what)) !== -1) {
            arr.splice(ax, 1);
        }
    }
    return arr;
}
</script>